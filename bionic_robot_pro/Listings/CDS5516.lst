C51 COMPILER V9.54   CDS5516                                                               08/03/2015 13:52:20 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CDS5516
OBJECT MODULE PLACED IN .\Objects\CDS5516.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE CDS5516.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\CDS5516.lst) TABS(2) OBJECT(.\Objects\CDS5516.obj)

line level    source

   1          #include "CDS5516.h"
   2          uchar send1[MAX]={0xFF,0xFF};  //需要发送的指令
   3          uchar rece1[MAX];              //需要接收的数据
   4          
   5          void Delayms(uchar N)   //@20.000MHz
   6          {
   7   1        uchar i, j, k, n;
   8   1        for(n=0;n<N;n++)
   9   1        {
  10   2          _nop_();
  11   2          _nop_();
  12   2          i = 1;
  13   2          j = 195;
  14   2          k = 136;
  15   2          do
  16   2          {
  17   3            do
  18   3            {
  19   4              while (--k);
  20   4            } while (--j);
  21   3          } while (--i);
  22   2        }
  23   1      }
  24          
  25          void Uart1_Init(void)         //串口1初始化
  26          {
  27   1        SCON  = 0x50;               //8位数据,可变波特率
  28   1        AUXR |= 0x40;               //定时器1时钟为Fosc,即1T
  29   1        AUXR &= 0xFE;               //串口1选择定时器1为波特率发生器
  30   1        TMOD &= 0x0F;               //设定定时器1为16位自动重装方式
  31   1        TL1   = TM1;                //设定定时初值
  32   1        TH1   = TM1>>8;             //设定定时初值
  33   1        ET1   = 0;                  //禁止定时器1中断
  34   1        TR1   = 1;                  //启动定时器1
  35   1        AUXR1 =(AUXR1 & 0x7F)|0x40; //设置串口1端口 RXD->P3.6  TXD->P3.7
  36   1      }  
  37          
  38          void uart1_send(uchar *s1,uchar n)  //串口1数据发送 
  39          {
  40   1        uchar i;
  41   1        for(i=0;i<n;i++)
  42   1        {
  43   2          SBUF = s1[i];                    //SUBF接受/发送缓冲
  44   2          while(!TI);                      // 等特数据传送  (TI发送中断标志)
  45   2          TI = 0;                          // 清除数据传送标志
  46   2        }
  47   1      }
  48          
  49          void uart1_rece(uchar n)              //串口1数据发送
  50          {
  51   1        uchar i;
  52   1        for(i=0;i<n;i++)
  53   1        {
  54   2          rece1[i]=SBUF;
C51 COMPILER V9.54   CDS5516                                                               08/03/2015 13:52:20 PAGE 2   

  55   2          while(!RI);
  56   2          RI=0;
  57   2        }
  58   1      }
  59          
  60          void change_ID(uchar OID , uchar NID )  //改舵机ID号 OID为旧ID  NID为新ID
  61          {
  62   1        uchar Check_Sum;
  63   1        uchar length=4;
  64   1        Check_Sum = ~ (OID + length +WRITE_DATA + EEPROM_ID + NID);
  65   1        send1[2]=OID;
  66   1        send1[3]=length;
  67   1        send1[4]=WRITE_DATA;
  68   1        send1[5]=EEPROM_ID;
  69   1        send1[6]= NID;
  70   1        send1[7]=Check_Sum;
  71   1        uart1_send(send1,length+4);
  72   1      }
  73          
  74          void change_BPS(uchar ID, uchar BPS)        //修改舵机的波特率
  75          {
  76   1        uchar Check_Sum;
  77   1        uchar length=4;
  78   1        Check_Sum = ~ (ID + length + WRITE_DATA + EEPROM_BPS + BPS);
  79   1        send1[2]=ID;
  80   1        send1[3]=length;
  81   1        send1[4]=WRITE_DATA;
  82   1        send1[5]=EEPROM_BPS;
  83   1        send1[6]= BPS;
  84   1        send1[7]=Check_Sum;
  85   1        uart1_send(send1,length+4);
  86   1      }
  87          
  88          void single_servo(uchar ID,uint angle ,uint speed)   //单个舵机控制
  89          {
  90   1        uchar Check_Sum;
  91   1        uchar length=7;
  92   1        uchar angle_L,angle_H,speed_L,speed_H;
  93   1        angle_L=angle%256;
  94   1        angle_H=angle>>8; 
  95   1        speed_L=speed%256;
  96   1        speed_H=speed>>8;
  97   1        Check_Sum = ~ (ID + length + WRITE_DATA + 0x1E + 
  98   1                       angle_L + angle_H + speed_L + speed_H );
  99   1        send1[2] =ID;
 100   1        send1[3] =length;
 101   1        send1[4] =WRITE_DATA;         //写指令
 102   1        send1[5] =0x1E;               //地址
 103   1        send1[6] =angle_L; send1[7] =angle_H;
 104   1        send1[8] =speed_L; send1[9] =speed_H;
 105   1        send1[10]=Check_Sum;
 106   1        uart1_send(send1,length+4);
 107   1      }
 108          
 109          void three_sevro(uchar ID1, uint angle1, uint speed1,
 110                           uchar ID2, uint angle2, uint speed2,
 111                           uchar ID3, uint angle3, uint speed3) 
 112          {
 113   1        uchar Check_Sum;
 114   1        uchar length=19;  //(L+1)*N+4 N为控制舵机的个数 
 115   1        uchar angle_L1, angle_H1, speed_L1, speed_H1;
 116   1        uchar angle_L2, angle_H2, speed_L2, speed_H2;
C51 COMPILER V9.54   CDS5516                                                               08/03/2015 13:52:20 PAGE 3   

 117   1        uchar angle_L3, angle_H3, speed_L3, speed_H3;
 118   1        angle_L1=angle1%256; angle_H1=angle1>>8; speed_L1=speed1%256; speed_H1=speed1>>8;
 119   1        angle_L2=angle2%256; angle_H2=angle2>>8; speed_L2=speed2%256; speed_H2=speed2>>8; 
 120   1        angle_L3=angle3%256; angle_H3=angle3>>8; speed_L3=speed3%256; speed_H3=speed3>>8;
 121   1        Check_Sum = ~ (0xFE + length + SYNC_WRITE + 0x1E + 0x04 + 
 122   1                        ID1 + angle_L1 + angle_H1 + speed_L1 + speed_H1+  
 123   1                        ID2 + angle_L2 + angle_H2 + speed_L2 + speed_H2+
 124   1                        ID3 + angle_L3 + angle_H3 + speed_L3 + speed_H3);
 125   1        send1[2] =0xFE;                     //广播ID
 126   1        send1[3] =length;
 127   1        send1[4] =SYNC_WRITE;               //同步写指令
 128   1        send1[5] =0x1E;                     //地址
 129   1        send1[6] =0x04;                     //写入数据的长度
 130   1        send1[7] =ID1;
 131   1        send1[8] =angle_L1; send1[9] =angle_H1;
 132   1        send1[10]=speed_L1; send1[11]=speed_H1;
 133   1        send1[12]=ID2;
 134   1        send1[13]=angle_L2; send1[14]=angle_H2;
 135   1        send1[15]=speed_L2; send1[16]=speed_H2;
 136   1        send1[17]=ID3;
 137   1        send1[18]=angle_L3; send1[19]=angle_H3;
 138   1        send1[20]=speed_L3; send1[21]=speed_H3;
 139   1        send1[22]=Check_Sum;
 140   1        uart1_send(send1,length+4);
 141   1      }
 142          
 143          void four_sevro(uchar ID1, uint angle1, uint speed1,
 144                          uchar ID2, uint angle2, uint speed2,
 145                          uchar ID3, uint angle3, uint speed3,
 146                          uchar ID4, uint angle4, uint speed4)    
 147          {
 148   1        uchar Check_Sum;
 149   1        uchar length=24;  //(L+1)*N+4  N为控制舵机的个数
 150   1        uchar angle_L1, angle_H1, speed_L1, speed_H1;
 151   1        uchar angle_L2, angle_H2, speed_L2, speed_H2;
 152   1        uchar angle_L3, angle_H3, speed_L3, speed_H3;
 153   1        uchar angle_L4, angle_H4, speed_L4, speed_H4;
 154   1        angle_L1=angle1%256; angle_H1=angle1>>8; speed_L1=speed1%256; speed_H1=speed1>>8;
 155   1        angle_L2=angle2%256; angle_H2=angle2>>8; speed_L2=speed2%256; speed_H2=speed2>>8; 
 156   1        angle_L3=angle3%256; angle_H3=angle3>>8; speed_L3=speed3%256; speed_H3=speed3>>8;
 157   1        angle_L4=angle4%256; angle_H4=angle4>>8; speed_L4=speed4%256; speed_H4=speed4>>8;
 158   1        Check_Sum = ~ (0xFE + length + SYNC_WRITE + 0x1E + 0x04 + 
 159   1                        ID1 + angle_L1 + angle_H1 + speed_L1 + speed_H1+  
 160   1                        ID2 + angle_L2 + angle_H2 + speed_L2 + speed_H2+
 161   1                        ID3 + angle_L3 + angle_H3 + speed_L3 + speed_H3+
 162   1                        ID4 + angle_L4 + angle_H4 + speed_L4 + speed_H4);
 163   1        send1[2] =0xFE;                     //广播ID
 164   1        send1[3] =length;
 165   1        send1[4] =SYNC_WRITE;               //同步写指令
 166   1        send1[5] =0x1E;                     //地址
 167   1        send1[6] =0x04;                     //写入数据的长度
 168   1        send1[7] =ID1;
 169   1        send1[8] =angle_L1; send1[9] =angle_H1;
 170   1        send1[10]=speed_L1; send1[11]=speed_H1;
 171   1        send1[12]=ID2;
 172   1        send1[13]=angle_L2; send1[14]=angle_H2;
 173   1        send1[15]=speed_L2; send1[16]=speed_H2;
 174   1        send1[17]=ID3;
 175   1        send1[18]=angle_L3; send1[19]=angle_H3;
 176   1        send1[20]=speed_L3; send1[21]=speed_H3;
 177   1        send1[22]=ID4;
 178   1        send1[23]=angle_L4; send1[24]=angle_H4;
C51 COMPILER V9.54   CDS5516                                                               08/03/2015 13:52:20 PAGE 4   

 179   1        send1[25]=speed_L4; send1[26]=speed_H4;
 180   1        send1[27]=Check_Sum;
 181   1        uart1_send(send1,length+4);
 182   1      }
 183          
 184          void six_sevro(uchar ID1, uint angle1, uint speed1,
 185                         uchar ID2, uint angle2, uint speed2,
 186                         uchar ID3, uint angle3, uint speed3,
 187                         uchar ID4, uint angle4, uint speed4,
 188                         uchar ID5, uint angle5, uint speed5,
 189                         uchar ID6, uint angle6, uint speed6)  
 190          {
 191   1        uchar Check_Sum;
 192   1        uchar length=34;  //(L+1)*N+4  N为控制舵机的个数
 193   1        uchar angle_L1, angle_H1, speed_L1, speed_H1;
 194   1        uchar angle_L2, angle_H2, speed_L2, speed_H2;
 195   1        uchar angle_L3, angle_H3, speed_L3, speed_H3;
 196   1        uchar angle_L4, angle_H4, speed_L4, speed_H4;
 197   1        uchar angle_L5, angle_H5, speed_L5, speed_H5;
 198   1        uchar angle_L6, angle_H6, speed_L6, speed_H6;
 199   1        angle_L1=angle1%256; angle_H1=angle1>>8; speed_L1=speed1%256; speed_H1=speed1>>8;
 200   1        angle_L2=angle2%256; angle_H2=angle2>>8; speed_L2=speed2%256; speed_H2=speed2>>8; 
 201   1        angle_L3=angle3%256; angle_H3=angle3>>8; speed_L3=speed3%256; speed_H3=speed3>>8;
 202   1        angle_L4=angle4%256; angle_H4=angle4>>8; speed_L4=speed4%256; speed_H4=speed4>>8;
 203   1        angle_L5=angle5%256; angle_H5=angle5>>8; speed_L5=speed5%256; speed_H5=speed5>>8; 
 204   1        angle_L6=angle6%256; angle_H6=angle6>>8; speed_L6=speed6%256; speed_H6=speed6>>8;
 205   1        Check_Sum = ~ (0xFE + length + SYNC_WRITE + 0x1E + 0x04 + 
 206   1                        ID1 + angle_L1 + angle_H1 + speed_L1 + speed_H1+  
 207   1                        ID2 + angle_L2 + angle_H2 + speed_L2 + speed_H2+
 208   1                        ID3 + angle_L3 + angle_H3 + speed_L3 + speed_H3+
 209   1                        ID4 + angle_L4 + angle_H4 + speed_L4 + speed_H4+  
 210   1                        ID5 + angle_L5 + angle_H5 + speed_L5 + speed_H5+
 211   1                        ID6 + angle_L6 + angle_H6 + speed_L6 + speed_H6);
 212   1        send1[2] =0xFE;                     //广播ID
 213   1        send1[3] =length;
 214   1        send1[4] =SYNC_WRITE;               //同步写指令
 215   1        send1[5] =0x1E;                     //地址
 216   1        send1[6] =0x04;                     //写入数据的长度
 217   1        send1[7] =ID1;
 218   1        send1[8] =angle_L1; send1[9] =angle_H1;
 219   1        send1[10]=speed_L1; send1[11]=speed_H1;
 220   1        send1[12]=ID2;
 221   1        send1[13]=angle_L2; send1[14]=angle_H2;
 222   1        send1[15]=speed_L2; send1[16]=speed_H2;
 223   1        send1[17]=ID3;
 224   1        send1[18]=angle_L3; send1[19]=angle_H3;
 225   1        send1[20]=speed_L3; send1[21]=speed_H3;
 226   1        send1[22]=ID4;
 227   1        send1[23]=angle_L4; send1[24]=angle_H4;
 228   1        send1[25]=speed_L4; send1[26]=speed_H4;
 229   1        send1[27]=ID5;
 230   1        send1[28]=angle_L5; send1[29]=angle_H5;
 231   1        send1[30]=speed_L5; send1[31]=speed_H5;
 232   1        send1[32]=ID6;
 233   1        send1[33]=angle_L6; send1[34]=angle_H6;
 234   1        send1[35]=speed_L6; send1[36]=speed_H6;
 235   1        send1[37]=Check_Sum;
 236   1        uart1_send(send1,length+4);
 237   1      }
 238          
 239          void reset_servo()
 240          { 
C51 COMPILER V9.54   CDS5516                                                               08/03/2015 13:52:20 PAGE 5   

 241   1        three_sevro( 1,550,350, 2,512,350, 3,570,350);Delayms(40);
 242   1        three_sevro( 4,550,350, 5,450,350, 6,460,350);Delayms(40);
 243   1        three_sevro( 7,560,350, 8,560,350, 9,530,350);Delayms(40);
 244   1        three_sevro(10,430,350,11,490,350,12,270,350);Delayms(40);
 245   1      }
 246          
 247          void run()
 248          {
 249   1        four_sevro(3,650,650, 4,420,650,
 250   1                              9,470,650,10,510,650);Delayms(15);
 251   1        six_sevro( 4,630,650, 5,480,650, 6,450,650,
 252   1                  10,320,650,11,450,650,12,280,650);Delayms(15);
 253   1        six_sevro( 4,630,650, 5,450,650, 6,460,650, 
 254   1                  10,320,650,11,490,650,12,270,650);Delayms(15);
 255   1        six_sevro( 1,580,650, 2,490,650, 3,610,650,
 256   1                   7,540,650, 8,580,650, 9,590,650);Delayms(15);
 257   1        six_sevro( 1,550,650, 2,512,650, 3,610,650,
 258   1                   7,560,650, 8,560,650, 9,590,650);Delayms(15);
 259   1        four_sevro(3,570,600, 4,550,600, 
 260   1                               9,530,600,10,430,600);Delayms(15); 
 261   1      }
 262          
 263          void go_forward()       //前进
 264          {
 265   1         six_sevro( 4,630,650, 5,480,650, 6,450,650,
 266   1                   10,350,650,11,450,650,12,280,650);Delayms(15);
 267   1         six_sevro( 4,630,650, 5,450,650, 6,460,650, 
 268   1                   10,350,650,11,490,650,12,270,650);Delayms(15);
 269   1         six_sevro( 1,580,650, 2,490,650, 3,490,650,
 270   1                    7,540,650, 8,580,650, 9,610,650);Delayms(15);
 271   1         six_sevro( 1,550,650, 2,512,650, 3,490,650,
 272   1                    7,560,650, 8,560,650, 9,610,650);Delayms(15);
 273   1         four_sevro(3,570,650, 4,550,650,
 274   1                               9,530,650,10,430,650);Delayms(15);                       
 275   1      }
 276          
 277          void turn_left()        //左转
 278          {
 279   1         six_sevro( 4,470,650, 5,480,650, 6,450,650,
 280   1                   10,350,650,11,450,650,12,280,650);Delayms(15);
 281   1         six_sevro( 4,470,650, 5,450,650, 6,460,650, 
 282   1                   10,350,650,11,490,650,12,270,650);Delayms(15);
 283   1         six_sevro( 1,580,650, 2,490,650, 3,490,650,
 284   1                    7,540,650, 8,580,650, 9,450,650);Delayms(15);
 285   1         six_sevro( 1,550,650, 2,512,650, 3,490,650,
 286   1                    7,560,650, 8,560,650, 9,450,650);Delayms(15);
 287   1         four_sevro(3,570,650, 4,550,650, 
 288   1                               9,530,650,10,430,650);Delayms(15); 
 289   1      }
 290          
 291          void turn_right()       //右转
 292          {
 293   1         six_sevro( 4,630,650, 5,480,650, 6,450,650,
 294   1                   10,510,650,11,450,650,12,280,650);Delayms(15);
 295   1         six_sevro( 4,640,650, 5,450,650, 6,460,650, 
 296   1                   10,510,650,11,490,650,12,270,600);Delayms(15);
 297   1         six_sevro( 1,580,650, 2,490,650, 3,640,650,
 298   1                    7,540,650, 8,580,650, 9,610,650);Delayms(15);
 299   1         six_sevro( 1,550,650, 2,512,650, 3,640,650,
 300   1                    7,560,650, 8,560,650, 9,610,650);Delayms(15);
 301   1        four_sevro( 3,570,650, 4,540,650, 
 302   1                               9,530,650,10,430,650);Delayms(15);
C51 COMPILER V9.54   CDS5516                                                               08/03/2015 13:52:20 PAGE 6   

 303   1      }
 304          
 305          void draw_back()       //后退
 306          {
 307   1         six_sevro( 4,470,650, 5,480,650, 6,450,650,
 308   1                   10,510,650,11,450,650,12,280,650);Delayms(15);
 309   1         six_sevro( 4,470,650, 5,450,650, 6,460,650, 
 310   1                   10,510,650,11,490,650,12,270,650);Delayms(15);
 311   1         six_sevro( 1,580,650, 2,490,650, 3,650,650,
 312   1                    7,540,650, 8,580,650, 9,450,650);Delayms(15);
 313   1         six_sevro( 1,550,650, 2,512,650, 3,650,650,
 314   1                    7,560,650, 8,560,650, 9,450,650);Delayms(15);
 315   1        four_sevro( 3,570,650, 4,550,650, 
 316   1                               9,530,650,10,430,650);Delayms(15);
 317   1      }
 318          
 319          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     80     118
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
